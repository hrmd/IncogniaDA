s
# Setting work folder
setwd("C:/Users/Toccato/OneDrive/Work Experience/Incognia/Case/r")
getwd()
# Loading packages
library(dplyr)
library(data.table)
library(ggplot2)
library(Amelia)
library(caret)
library(reshape)
library(randomForest)
library(e1071)
library(tidyr)
library(DMwR)
library(GGally)
library(stringr)
#library(tidyverse)
#library(readr)
#library(lubridate)
#library(ggmap)
library(psych)
library(gridExtra)
library(scales)
library(viridis)
library(hrbrthemes)
library(corrplot)
# Loading dataset
tb <- read.table("Dados/hugo_incognia_db_for_da_test.csv",
dec = ".",
sep = ",",
h = T,
fileEncoding = "windows-1252")
# Removing id column
tb$event_id <- NULL
# Shortening some column names
names(tb) <- c("event_timestamp","account_id","device",
"distance_fl","device_age","is_emulator",
"fake_location","root_permission","official_store")
# Converting variable to integer
tb$distance_fl <-
as.integer(tb$distance_fl)
# Converting miliseconds to timestamp
tb$event_timestamp <- as.POSIXct(tb$event_timestamp / 1000,
origin = "1970-01-01",
tz = "UTC")
summary(tb$event_timestamp)
# Creating variable Event Hour
tb$event_hour <- format(tb$event_timestamp,"%H")
tb$event_hour <- as.numeric(tb$event_hour)
# Creating variable Event Date
tb$event_date <- as.Date(tb$event_timestamp,format="%Y-%m-%d")
#Sys.setlocale("LC_ALL", "Portuguese")
#Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME","English")
tb$weekday <- weekdays(tb$event_date)
tb$wday <- as.POSIXlt(tb$event_date)$wday
# Missing values
sapply(tb, function(x) sum(is.na(x)))
tb <- replace_na(tb,list(distance_fl = -1))
# Device Age Category
tb$age_category <- cut(tb$device_age,
breaks = c(0,1,7,30,365,Inf),
labels = c("Day","Week","Month","Year","Year+"), right = FALSE)
# Distance to frequent location Category
tb$distance_group <- cut(tb$distance_fl,
breaks = c(-1,0,1,10,Inf),
labels = c("No Location",
"Freq Location",
"Near FL",
"Far FL"), right = FALSE)
# Creating Risk Score
tb$score_risk = 0
tb$score_risk <- tb$score_risk + ifelse(tb$event_hour>=0 & tb$event_hour<=6,1,0)
tb$score_risk <- tb$score_risk + ifelse(tb$distance_group=="No Location",3,0)
tb$score_risk <- tb$score_risk + ifelse(tb$distance_group=="Far FL",2,0)
tb$score_risk <- tb$score_risk + ifelse(tb$distance_group=="Near FL",1,0)
tb$score_risk <- tb$score_risk + ifelse(tb$age_category=="Day",3,0)
tb$score_risk <- tb$score_risk + ifelse(tb$is_emulator=="true",3,0)
tb$score_risk <- tb$score_risk + ifelse(tb$fake_location=="true",3,0)
tb$score_risk <- tb$score_risk + ifelse(tb$root_permission=="true",3,0)
tb$score_risk <- tb$score_risk + ifelse(tb$official_store=="false",3,0)
# Creating Risk Level
tb$risk_level <- cut(tb$score_risk,
breaks = c(0,2,3,Inf),
labels = c("Low","Medium","High"),
right = FALSE)
# Creating a single column with all numeric variables
tb_pivot <- pivot_longer(select
(tb,c("distance_fl",
"device_age",
"event_hour",
"score_risk")),
cols = everything(), names_to = "numeric_var",
values_to = "values")
# Building a numeric only dataframe
tb_num <- select(tb,c("distance_fl",
"device_age",
"event_hour",
"score_risk"))
freq1 <- table(tb[c('is_emulator')])
freq2 <- table(tb[c('fake_location')])
freq3 <- table(tb[c('root_permission')])
freq4 <- table(tb[c('official_store')])
freq5 <- table(tb[c('distance_group')])
freq6 <- table(tb[c('age_category')])
freq7 <- table(tb[c('event_hour')])
freq8 <- table(tb[c('risk_level')])
# Relative frequency
freq_rel1 <- round(prop.table(freq1),7)*100
freq_rel2 <- round(prop.table(freq2),7)*100
freq_rel3 <- round(prop.table(freq3),7)*100
freq_rel4 <- round(prop.table(freq4),7)*100
freq_rel5 <- round(prop.table(freq5),4)*100
freq_rel6 <- round(prop.table(freq6),4)*100
freq_rel7 <- round(prop.table(freq7),4)*100
freq_rel8 <- round(prop.table(freq8),4)*100
write.csv(df,"C:\\Users\\Toccato\\OneDrive\\Work Experience\\Incognia\\Case\\r\\Dados\\hugo_incognia_db_output.csv", row.names = TRUE)
df <- data.frame(tb)
write.csv(df,"C:\\Users\\Toccato\\OneDrive\\Work Experience\\Incognia\\Case\\r\\Dados\\hugo_incognia_db_output.csv", row.names = TRUE)
